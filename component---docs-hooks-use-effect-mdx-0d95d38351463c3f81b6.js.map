{"version":3,"sources":["webpack:///../docs/hooks/useEffect.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8fAOO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,sBACE,kBAAIC,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,oBAAyC,kBAAIA,WAAW,MACpD,kBAAIA,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,gCAEJ,kBAAIA,WAAW,MAAf,sBAA2C,0BAAYA,WAAW,MAAvB,qBAA3C,IAA8G,0BAAYA,WAAW,MAAvB,sBAA9G,IAAkL,0BAAYA,WAAW,MAAvB,yBAClL,kBAAIA,WAAW,MAAf,8CACA,kBAAIA,WAAW,MAAf,8BACA,kBAAIA,WAAW,MAAf,+BAEF,YAAC,IAAD,CAAeD,QAAQ,wB,wMAK3BH,EAAWK,gBAAiB","file":"component---docs-hooks-use-effect-mdx-0d95d38351463c3f81b6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-cheatsheet/react-cheatsheet/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport UseEffectDemo from '../../component/hooks/UseEffect';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"基础要点\"\n    }}>{`基础要点`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`什么是副作用`}</li>\n      <li parentName=\"ol\">{`useEffect 解决了什么问题`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`class 组件的 didMount 和 DidUpdate 通常有很多冗余代码`}</li>\n          <li parentName=\"ul\">{`class 组件的绑定函数 bind this 问题`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`类比 class 组件三个钩子结合体 `}<inlineCode parentName=\"li\">{`componentDidMount`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`componentDidUpdate`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`componentWillUnmount`}</inlineCode></li>\n      <li parentName=\"ol\">{`总是会在 after render 之后执行（第一次 render 和之后每次更新）`}</li>\n      <li parentName=\"ol\">{`添加依赖数组可以控制每次 render 之后是否执行`}</li>\n      <li parentName=\"ol\">{`分为需要 cleanup 和不需要 cleanup `}</li>\n    </ol>\n    <UseEffectDemo mdxType=\"UseEffectDemo\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}