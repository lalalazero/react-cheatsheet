(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Pjga:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return u}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),b=n("TjRS"),l=n("Xk6X");n("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/hooks/useEffect.mdx"}});var i={_frontmatter:r},p=b.a;function u(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,b={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(a.b)(p,c({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"基础用法"},"基础用法"),Object(a.b)("p",null,"第一次 render 以及 点击按钮 +1 每次导致组件 re-render 都会执行 useEffect, 更新 document.title"),Object(a.b)(l.a,{mdxType:"BasicEffect"}),Object(a.b)("h2",{id:"多个-useeffect"},"多个 useEffect"),Object(a.b)("h2",{id:"cleanup"},"cleanup"),Object(a.b)("h2",{id:"依赖空数组"},"依赖空数组"),Object(a.b)("h2",{id:"依赖不为空数组"},"依赖不为空数组"),Object(a.b)("h2",{id:"要点总结"},"要点总结"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"useEffect(effectFunction, arrayDependency)")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"什么是副作用"),Object(a.b)("p",{parentName:"li"},"请求数据、添加事件监听、直接修改 DOM、打印日志 log 等操作都属于此类。根据是否需要 cleanup ，又分为"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"不需要 cleanup ",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"打印日志 log"),Object(a.b)("li",{parentName:"ul"},"请求数据"),Object(a.b)("li",{parentName:"ul"},"直接修改 DOM"))),Object(a.b)("li",{parentName:"ul"},"需要 cleanup ",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"setTimeout setInterval 定时器"),Object(a.b)("li",{parentName:"ul"},"事件监听函数"))))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"useEffect 解决了什么问题"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"函数式组件可以有类似 class 组件的钩子"),Object(a.b)("li",{parentName:"ul"},"class 组件的 didMount 和 DidUpdate 通常有很多冗余代码，而且和 class 组件强绑定，无法抽取。 useEffect 可以将这些过程代码按照逻辑单独抽取，各自执行。"),Object(a.b)("li",{parentName:"ul"},"class 组件的绑定函数 bind this 问题"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"useEffect 类比 class 组件三个钩子结合体 "),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"componentDidMount")," "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"componentDidUpdate"),"  "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"componentWillUnmount")))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"useEffect 总是会在 render 之后执行（包括 first render 和 after every update) "),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"除非用依赖数组添加控制")))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/hooks/useEffect.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-hooks-use-effect-mdx-590b618c01d60d7638d0.js.map