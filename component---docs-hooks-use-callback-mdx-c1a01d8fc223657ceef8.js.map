{"version":3,"sources":["webpack:///../docs/hooks/useCallback.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ggBAOO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kEAAiD,0BAAYC,WAAW,KAAvB,qCAAjD,QAAuI,0BAAYA,WAAW,KAAvB,uCAAvI,uBACgB,0BAAYA,WAAW,KAAvB,iCADhB,kDAE2C,0BAAYA,WAAW,KAAvB,uDAC3C,YAAC,IAAD,CAAaD,QAAQ,sB,0MAKzBH,EAAWK,gBAAiB","file":"component---docs-hooks-use-callback-mdx-c1a01d8fc223657ceef8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-cheatsheet/react-cheatsheet/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport UseCallback from '../../component/hooks/UseCallback';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`useCallback 用来记忆一个函数。其实就是返回一个函数的 useMemo: `}<inlineCode parentName=\"p\">{`useCallback(realFunc, dependency)`}</inlineCode>{` 就等于 `}<inlineCode parentName=\"p\">{`useMemo(() => realFunc, dependency)`}</inlineCode>{`\n因为 useMemo 的固定写法是 `}<inlineCode parentName=\"p\">{`useMemo(function, dependency)`}</inlineCode>{`\n第一个参数始终是一个 function，所以要返回一个函数的 useMemo 写法很难看 `}<inlineCode parentName=\"p\">{`useMemo(() => () => { console.log('要返回的函数') }, [])`}</inlineCode></p>\n    <UseCallback mdxType=\"UseCallback\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}