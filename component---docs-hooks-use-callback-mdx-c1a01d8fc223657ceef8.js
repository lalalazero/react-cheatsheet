(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"6WAF":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return s}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("mXGw");var o=t("/FXl"),a=t("TjRS"),r=t("Anmy");t("aD51");function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/hooks/useCallback.mdx"}});var l={_frontmatter:i},u=a.a;function s(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(u,c({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"useCallback 用来记忆一个函数。其实就是返回一个函数的 useMemo: ",Object(o.b)("inlineCode",{parentName:"p"},"useCallback(realFunc, dependency)")," 就等于 ",Object(o.b)("inlineCode",{parentName:"p"},"useMemo(() => realFunc, dependency)"),"\n因为 useMemo 的固定写法是 ",Object(o.b)("inlineCode",{parentName:"p"},"useMemo(function, dependency)"),"\n第一个参数始终是一个 function，所以要返回一个函数的 useMemo 写法很难看 ",Object(o.b)("inlineCode",{parentName:"p"},"useMemo(() => () => { console.log('要返回的函数') }, [])")),Object(o.b)(r.a,{mdxType:"UseCallback"}))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/hooks/useCallback.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-hooks-use-callback-mdx-c1a01d8fc223657ceef8.js.map