{"version":3,"sources":["webpack:///../docs/hooks/useLayoutEffect.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8fAOO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,mPAEA,uBAAK,sBAAMC,WAAW,OAAU,IAA3B,8FAEL,YAAC,IAAD,CAAMD,QAAQ,e,8MAKlBH,EAAWK,gBAAiB","file":"component---docs-hooks-use-layout-effect-mdx-f4a156394fbf9a33a87c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-cheatsheet/react-cheatsheet/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Demo from '../../component/hooks/UseLayoutEffect';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`useLayoutEffect 和 useEffect 的区别在于执行时间上。useEffect 等到浏览器渲染完成后执行，但是 useLayoutEffect 不等到浏览器 paint 就直接把对DOM的修改应用上去。\n过程(2) 执行 useLayoutEffect 过程(3) 执行 useEffect。通常我们都不会对 layout 做操作，因此让浏览器先渲染页面，用户看到，再执行 useEffect 做一些做副作用请求等。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`虚拟DOM -----(1)-----> 真实DOM -------(2)--------> 浏览器Paint ------(3)-------> 人眼看到\n`}</code></pre>\n    <Demo mdxType=\"Demo\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}